resources:
  - name: GitHubVaultPluginRepoJFrog
    type: GitRepo
    configuration:
      gitProvider: partnership_github
      path: jfrog/artifactory-secrets-plugin # if path is modified, change the name as well, per Pipelines doc
      branches:
        include: pipeline
      buildOn:
        commit: false
        pullRequestCreate: true
      cancelPendingRunsOn:
        pullRequestUpdate: true
pipelines:
  - name: vault_plugin_artifactory
    steps:
      - name: build_and_run_vault_plugin
        type: Bash
        configuration:
          priority: 1
          timeoutSeconds: 1200 # 20 minutes
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.18"
          integrations:
            - name: partnership_slack
            - name: partnership_github
          inputResources:
            - name: GitHubVaultPluginRepoJFrog
        execution:
          onStart:
            - echo "Preparing for work. Install GoReleaser"
            - echo "Install GoReleaser"
            - echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
            - sudo apt update
            - sudo apt install goreleaser
          onExecute:
#            - cd ${res_GitHubVaultPluginRepoJFrog_resourcePath} # we need to manually move into the resource path
            - echo "Verify the code contents merged feature branch with master branch (detached mode)"
            - git branch && ls -al
            - add_run_variables PLUGIN_VERSION=$(git describe --tags --abbrev=0 | sed  -n 's/v\([0-9]*\).\([0-9]*\).\([0-9]*\)/\1.\2.\3/p')
            - export NEXT_VERSION=${PLUGIN_VERSION} && echo ${NEXT_VERSION}
            - make test
          onSuccess:
            - echo "Success"
            - send_notification partnership_slack --text "${pipeline_name} step <${step_url}|${step_name}> is completed. Version ${NEXT_VERSION:-" wasn't set"}."
          onFailure:
            - echo "Failure"
            - send_notification partnership_slack --text "${pipeline_name} pipeline failed on <${step_url}|${step_name}> step"
          onComplete:
            - echo "Complete"